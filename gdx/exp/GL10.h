/*******************************************************************************
* Copyright 2011 See AUTHORS file.
* 
* Licensed under the Apache License, Version 2.0 (the "License") = 0;
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*   http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
******************************************************************************/
#pragma once

#include "GLCommon.h"

/** Interface wrapping all standard OpenGL ES 1.0 methods. Note that this excludes and fixed point OpenGL ES 1.0 methods!*/
class GL10 : virtual public GLCommon
{
public:
	enum
	{
		//TODO: Review this. 
		//For now I prefixed constants with GDX_ otherwise they clash with Open GL defines
		GDX_GL_OES_VERSION_1_0 = 1,
		GDX_GL_OES_read_format = 1,
		GDX_GL_OES_compressed_paletted_texture = 1,
		GDX_GL_DEPTH_BUFFER_BIT = 0x00000100,
		GDX_GL_STENCIL_BUFFER_BIT = 0x00000400,
		GDX_GL_COLOR_BUFFER_BIT = 0x00004000,
		GDX_GL_FALSE = 0,
		GDX_GL_TRUE = 1,
		GDX_GL_POINTS = 0x0000,
		GDX_GL_LINES = 0x0001,
		GDX_GL_LINE_LOOP = 0x0002,
		GDX_GL_LINE_STRIP = 0x0003,
		GDX_GL_TRIANGLES = 0x0004,
		GDX_GL_TRIANGLE_STRIP = 0x0005,
		GDX_GL_TRIANGLE_FAN = 0x0006,
		GDX_GL_NEVER = 0x0200,
		GDX_GL_LESS = 0x0201,
		GDX_GL_EQUAL = 0x0202,
		GDX_GL_LEQUAL = 0x0203,
		GDX_GL_GREATER = 0x0204,
		GDX_GL_NOTEQUAL = 0x0205,
		GDX_GL_GEQUAL = 0x0206,
		GDX_GL_ALWAYS = 0x0207,
		GDX_GL_ZERO = 0,
		GDX_GL_ONE = 1,
		GDX_GL_SRC_COLOR = 0x0300,
		GDX_GL_ONE_MINUS_SRC_COLOR = 0x0301,
		GDX_GL_SRC_ALPHA = 0x0302,
		GDX_GL_ONE_MINUS_SRC_ALPHA = 0x0303,
		GDX_GL_DST_ALPHA = 0x0304,
		GDX_GL_ONE_MINUS_DST_ALPHA = 0x0305,
		GDX_GL_DST_COLOR = 0x0306,
		GDX_GL_ONE_MINUS_DST_COLOR = 0x0307,
		GDX_GL_SRC_ALPHA_SATURATE = 0x0308,
		GDX_GL_FRONT = 0x0404,
		GDX_GL_BACK = 0x0405,
		GDX_GL_FRONT_AND_BACK = 0x0408,
		GDX_GL_FOG = 0x0B60,
		GDX_GL_LIGHTING = 0x0B50,
		GDX_GL_TEXTURE_2D = 0x0DE1,
		GDX_GL_CULL_FACE = 0x0B44,
		GDX_GL_ALPHA_TEST = 0x0BC0,
		GDX_GL_BLEND = 0x0BE2,
		GDX_GL_COLOR_LOGIC_OP = 0x0BF2,
		GDX_GL_DITHER = 0x0BD0,
		GDX_GL_STENCIL_TEST = 0x0B90,
		GDX_GL_DEPTH_TEST = 0x0B71,
		GDX_GL_POINT_SMOOTH = 0x0B10,
		GDX_GL_LINE_SMOOTH = 0x0B20,
		GDX_GL_SCISSOR_TEST = 0x0C11,
		GDX_GL_COLOR_MATERIAL = 0x0B57,
		GDX_GL_NORMALIZE = 0x0BA1,
		GDX_GL_RESCALE_NORMAL = 0x803A,
		GDX_GL_POLYGON_OFFSET_FILL = 0x8037,
		GDX_GL_VERTEX_ARRAY = 0x8074,
		GDX_GL_NORMAL_ARRAY = 0x8075,
		GDX_GL_COLOR_ARRAY = 0x8076,
		GDX_GL_TEXTURE_COORD_ARRAY = 0x8078,
		GDX_GL_MULTISAMPLE = 0x809D,
		GDX_GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E,
		GDX_GL_SAMPLE_ALPHA_TO_ONE = 0x809F,
		GDX_GL_SAMPLE_COVERAGE = 0x80A0,
		GDX_GL_NO_ERROR = 0,
		GDX_GL_INVALID_ENUM = 0x0500,
		GDX_GL_INVALID_VALUE = 0x0501,
		GDX_GL_INVALID_OPERATION = 0x0502,
		GDX_GL_STACK_OVERFLOW = 0x0503,
		GDX_GL_STACK_UNDERFLOW = 0x0504,
		GDX_GL_OUT_OF_MEMORY = 0x0505,
		GDX_GL_EXP = 0x0800,
		GDX_GL_EXP2 = 0x0801,
		GDX_GL_FOG_DENSITY = 0x0B62,
		GDX_GL_FOG_START = 0x0B63,
		GDX_GL_FOG_END = 0x0B64,
		GDX_GL_FOG_MODE = 0x0B65,
		GDX_GL_FOG_COLOR = 0x0B66,
		GDX_GL_CW = 0x0900,
		GDX_GL_CCW = 0x0901,
		GDX_GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12,
		GDX_GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22,
		GDX_GL_ALIASED_POINT_SIZE_RANGE = 0x846D,
		GDX_GL_ALIASED_LINE_WIDTH_RANGE = 0x846E,
		GDX_GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A,
		GDX_GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B,
		GDX_GL_MAX_LIGHTS = 0x0D31,
		GDX_GL_MAX_TEXTURE_SIZE = 0x0D33,
		GDX_GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36,
		GDX_GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38,
		GDX_GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39,
		GDX_GL_MAX_VIEWPORT_DIMS = 0x0D3A,
		GDX_GL_MAX_ELEMENTS_VERTICES = 0x80E8,
		GDX_GL_MAX_ELEMENTS_INDICES = 0x80E9,
		GDX_GL_MAX_TEXTURE_UNITS = 0x84E2,
		GDX_GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2,
		GDX_GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3,
		GDX_GL_SUBPIXEL_BITS = 0x0D50,
		GDX_GL_RED_BITS = 0x0D52,
		GDX_GL_GREEN_BITS = 0x0D53,
		GDX_GL_BLUE_BITS = 0x0D54,
		GDX_GL_ALPHA_BITS = 0x0D55,
		GDX_GL_DEPTH_BITS = 0x0D56,
		GDX_GL_STENCIL_BITS = 0x0D57,
		GDX_GL_DONT_CARE = 0x1100,
		GDX_GL_FASTEST = 0x1101,
		GDX_GL_NICEST = 0x1102,
		GDX_GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50,
		GDX_GL_POINT_SMOOTH_HINT = 0x0C51,
		GDX_GL_LINE_SMOOTH_HINT = 0x0C52,
		GDX_GL_POLYGON_SMOOTH_HINT = 0x0C53,
		GDX_GL_FOG_HINT = 0x0C54,
		GDX_GL_LIGHT_MODEL_AMBIENT = 0x0B53,
		GDX_GL_LIGHT_MODEL_TWO_SIDE = 0x0B52,
		GDX_GL_AMBIENT = 0x1200,
		GDX_GL_DIFFUSE = 0x1201,
		GDX_GL_SPECULAR = 0x1202,
		GDX_GL_POSITION = 0x1203,
		GDX_GL_SPOT_DIRECTION = 0x1204,
		GDX_GL_SPOT_EXPONENT = 0x1205,
		GDX_GL_SPOT_CUTOFF = 0x1206,
		GDX_GL_CONSTANT_ATTENUATION = 0x1207,
		GDX_GL_LINEAR_ATTENUATION = 0x1208,
		GDX_GL_QUADRATIC_ATTENUATION = 0x1209,
		GDX_GL_BYTE = 0x1400,
		GDX_GL_UNSIGNED_BYTE = 0x1401,
		GDX_GL_SHORT = 0x1402,
		GDX_GL_UNSIGNED_SHORT = 0x1403,
		GDX_GL_FLOAT = 0x1406,
		GDX_GL_CLEAR = 0x1500,
		GDX_GL_AND = 0x1501,
		GDX_GL_AND_REVERSE = 0x1502,
		GDX_GL_COPY = 0x1503,
		GDX_GL_AND_INVERTED = 0x1504,
		GDX_GL_NOOP = 0x1505,
		GDX_GL_XOR = 0x1506,
		GDX_GL_OR = 0x1507,
		GDX_GL_NOR = 0x1508,
		GDX_GL_EQUIV = 0x1509,
		GDX_GL_INVERT = 0x150A,
		GDX_GL_OR_REVERSE = 0x150B,
		GDX_GL_COPY_INVERTED = 0x150C,
		GDX_GL_OR_INVERTED = 0x150D,
		GDX_GL_NAND = 0x150E,
		GDX_GL_SET = 0x150F,
		GDX_GL_EMISSION = 0x1600,
		GDX_GL_SHININESS = 0x1601,
		GDX_GL_AMBIENT_AND_DIFFUSE = 0x1602,
		GDX_GL_MODELVIEW = 0x1700,
		GDX_GL_PROJECTION = 0x1701,
		GDX_GL_TEXTURE = 0x1702,
		GDX_GL_ALPHA = 0x1906,
		GDX_GL_RGB = 0x1907,
		GDX_GL_RGBA = 0x1908,
		GDX_GL_LUMINANCE = 0x1909,
		GDX_GL_LUMINANCE_ALPHA = 0x190A,
		GDX_GL_UNPACK_ALIGNMENT = 0x0CF5,
		GDX_GL_PACK_ALIGNMENT = 0x0D05,
		GDX_GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033,
		GDX_GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034,
		GDX_GL_UNSIGNED_SHORT_5_6_5 = 0x8363,
		GDX_GL_FLAT = 0x1D00,
		GDX_GL_SMOOTH = 0x1D01,
		GDX_GL_KEEP = 0x1E00,
		GDX_GL_REPLACE = 0x1E01,
		GDX_GL_INCR = 0x1E02,
		GDX_GL_DECR = 0x1E03,
		GDX_GL_VENDOR = 0x1F00,
		GDX_GL_RENDERER = 0x1F01,
		GDX_GL_VERSION = 0x1F02,
		GDX_GL_EXTENSIONS = 0x1F03,
		GDX_GL_MODULATE = 0x2100,
		GDX_GL_DECAL = 0x2101,
		GDX_GL_ADD = 0x0104,
		GDX_GL_TEXTURE_ENV_MODE = 0x2200,
		GDX_GL_TEXTURE_ENV_COLOR = 0x2201,
		GDX_GL_TEXTURE_ENV = 0x2300,
		GDX_GL_NEAREST = 0x2600,
		GDX_GL_LINEAR = 0x2601,
		GDX_GL_NEAREST_MIPMAP_NEAREST = 0x2700,
		GDX_GL_LINEAR_MIPMAP_NEAREST = 0x2701,
		GDX_GL_NEAREST_MIPMAP_LINEAR = 0x2702,
		GDX_GL_LINEAR_MIPMAP_LINEAR = 0x2703,
		GDX_GL_TEXTURE_MAG_FILTER = 0x2800,
		GDX_GL_TEXTURE_MIN_FILTER = 0x2801,
		GDX_GL_TEXTURE_WRAP_S = 0x2802,
		GDX_GL_TEXTURE_WRAP_T = 0x2803,
		GDX_GL_TEXTURE0 = 0x84C0,
		GDX_GL_TEXTURE1 = 0x84C1,
		GDX_GL_TEXTURE2 = 0x84C2,
		GDX_GL_TEXTURE3 = 0x84C3,
		GDX_GL_TEXTURE4 = 0x84C4,
		GDX_GL_TEXTURE5 = 0x84C5,
		GDX_GL_TEXTURE6 = 0x84C6,
		GDX_GL_TEXTURE7 = 0x84C7,
		GDX_GL_TEXTURE8 = 0x84C8,
		GDX_GL_TEXTURE9 = 0x84C9,
		GDX_GL_TEXTURE10 = 0x84CA,
		GDX_GL_TEXTURE11 = 0x84CB,
		GDX_GL_TEXTURE12 = 0x84CC,
		GDX_GL_TEXTURE13 = 0x84CD,
		GDX_GL_TEXTURE14 = 0x84CE,
		GDX_GL_TEXTURE15 = 0x84CF,
		GDX_GL_TEXTURE16 = 0x84D0,
		GDX_GL_TEXTURE17 = 0x84D1,
		GDX_GL_TEXTURE18 = 0x84D2,
		GDX_GL_TEXTURE19 = 0x84D3,
		GDX_GL_TEXTURE20 = 0x84D4,
		GDX_GL_TEXTURE21 = 0x84D5,
		GDX_GL_TEXTURE22 = 0x84D6,
		GDX_GL_TEXTURE23 = 0x84D7,
		GDX_GL_TEXTURE24 = 0x84D8,
		GDX_GL_TEXTURE25 = 0x84D9,
		GDX_GL_TEXTURE26 = 0x84DA,
		GDX_GL_TEXTURE27 = 0x84DB,
		GDX_GL_TEXTURE28 = 0x84DC,
		GDX_GL_TEXTURE29 = 0x84DD,
		GDX_GL_TEXTURE30 = 0x84DE,
		GDX_GL_TEXTURE31 = 0x84DF,
		GDX_GL_REPEAT = 0x2901,
		GDX_GL_CLAMP_TO_EDGE = 0x812F,
		GDX_GL_PALETTE4_RGB8_OES = 0x8B90,
		GDX_GL_PALETTE4_RGBA8_OES = 0x8B91,
		GDX_GL_PALETTE4_R5_G6_B5_OES = 0x8B92,
		GDX_GL_PALETTE4_RGBA4_OES = 0x8B93,
		GDX_GL_PALETTE4_RGB5_A1_OES = 0x8B94,
		GDX_GL_PALETTE8_RGB8_OES = 0x8B95,
		GDX_GL_PALETTE8_RGBA8_OES = 0x8B96,
		GDX_GL_PALETTE8_R5_G6_B5_OES = 0x8B97,
		GDX_GL_PALETTE8_RGBA4_OES = 0x8B98,
		GDX_GL_PALETTE8_RGB5_A1_OES = 0x8B99,
		GDX_GL_LIGHT0 = 0x4000,
		GDX_GL_LIGHT1 = 0x4001,
		GDX_GL_LIGHT2 = 0x4002,
		GDX_GL_LIGHT3 = 0x4003,
		GDX_GL_LIGHT4 = 0x4004,
		GDX_GL_LIGHT5 = 0x4005,
		GDX_GL_LIGHT6 = 0x4006,
		GDX_GL_LIGHT7 = 0x4007,

		GDX_GL_POINT = 0x1B00,
		GDX_GL_LINE = 0x1B01,
		GDX_GL_FILL = 0x1B02
	};
	virtual ~GL10() {};
	virtual void glAlphaFunc (int func, float ref) = 0;
	virtual void glClientActiveTexture (int texture) = 0;
	virtual void glColor4f (float red, float green, float blue, float alpha) = 0;
	virtual void glColorPointer (int size, int type, int stride,  void* pointer) = 0;
	virtual void glDeleteTextures (int n, const unsigned int* textures, int offset) = 0;
	virtual void glDisableClientState (int array) = 0;
	virtual void glEnableClientState (int array) = 0;
	virtual void glFogf (int pname, float param) = 0;
	virtual void glFogfv (int pname, float* params, int offset) = 0;
	virtual void glFogfv (int pname, float* params) = 0;
	virtual void glFrustumf (float left, float right, float bottom, float top, float zNear, float zFar) = 0;
	virtual void glGenTextures (int n, unsigned int* textures, int offset) = 0;
	virtual void glGetIntegerv (int pname, int* params, int offset) = 0;
	virtual void glLightModelf (int pname, float param) = 0;
	virtual void glLightModelfv (int pname, float* params, int offset) = 0;
	virtual void glLightModelfv (int pname, float* params) = 0;
	virtual void glLightf (int light, int pname, float param) = 0;
	virtual void glLightfv (int light, int pname, float* params, int offset) = 0;
	virtual void glLightfv (int light, int pname, float* params) = 0;
	virtual void glLoadIdentity () = 0;
	virtual void glLoadMatrixf (float* m, int offset) = 0;
	virtual void glLoadMatrixf (float* m) = 0;
	virtual void glLogicOp (int opcode) = 0;
	virtual void glMaterialf (int face, int pname, float param) = 0;
	virtual void glMaterialfv (int face, int pname, float* params, int offset) = 0;
	virtual void glMaterialfv (int face, int pname, float* params) = 0;
	virtual void glMatrixMode (int mode) = 0;
	virtual void glMultMatrixf (float* m, int offset) = 0;
	virtual void glMultMatrixf (float* m) = 0;
	virtual void glMultiTexCoord4f (int target, float s, float t, float r, float q) = 0;
	virtual void glNormal3f (float nx, float ny, float nz) = 0;
	virtual void glNormalPointer (int type, int stride,  void* pointer) = 0;
	virtual void glOrthof (float left, float right, float bottom, float top, float zNear, float zFar) = 0;
	virtual void glPointSize (float size) = 0;
	virtual void glPopMatrix () = 0;
	virtual void glPushMatrix () = 0;
	virtual void glRotatef (float angle, float x, float y, float z) = 0;
	virtual void glSampleCoverage (float value, bool invert) = 0;
	virtual void glScalef (float x, float y, float z) = 0;
	virtual void glShadeModel (int mode) = 0;
	virtual void glTexCoordPointer (int size, int type, int stride,  void* pointer) = 0;
	virtual void glTexEnvf (int target, int pname, float param) = 0;
	virtual void glTexEnvfv (int target, int pname, float* params, int offset) = 0;
	virtual void glTexEnvfv (int target, int pname, float* params) = 0;
	virtual void glTranslatef (float x, float y, float z) = 0;
	virtual void glVertexPointer (int size, int type, int stride,  void* pointer) = 0;
	virtual void glPolygonMode (int face, int mode) = 0;
};
